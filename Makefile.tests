# Makefile.tests
CXX = clang++
CXXFLAGS = -std=c++17 -Wall -O2
JUCE_PATH = /Applications/JUCE/modules
BUILD_DIR = build-tests

# Update this path if JUCE is elsewhere
INCLUDES = -I JuceLibraryCode \
           -I Source \
           -I $(JUCE_PATH)

DEFINES = -D JUCE_GLOBAL_MODULE_SETTINGS_INCLUDED=1 \
          -D JUCE_STANDALONE_APPLICATION=1 \
          -D JUCE_USE_CURL=0 \
          -D JUCE_WEB_BROWSER=0 \
          -D JUCE_UNIT_TESTS=1

FRAMEWORKS = -framework CoreAudio \
             -framework CoreMIDI \
             -framework AudioToolbox \
             -framework Accelerate \
             -framework CoreFoundation \
             -framework Cocoa \
             -framework IOKit \
             -framework Carbon \
             -framework QuartzCore

JUCE_SOURCES = JuceLibraryCode/include_juce_core.cpp \
               JuceLibraryCode/include_juce_data_structures.cpp \
               JuceLibraryCode/include_juce_events.cpp \
               JuceLibraryCode/include_juce_graphics.cpp \
               JuceLibraryCode/include_juce_gui_basics.cpp \
               JuceLibraryCode/include_juce_audio_basics.cpp \
               JuceLibraryCode/include_juce_audio_devices.cpp \
               JuceLibraryCode/include_juce_audio_formats.cpp \
               JuceLibraryCode/include_juce_audio_processors.cpp \
               JuceLibraryCode/include_juce_dsp.cpp

TEST_SOURCES = Source/tests/StandaloneTestRunner.cpp

# Add your implementation files that tests depend on
IMPL_SOURCES = Source/MidiEngine.cpp \
               Source/MidiFileManager.cpp \
               Source/Mixer.cpp \
               Source/PresetManager.cpp \
               Source/SFZEngine.cpp \
               Source/SFZVoice.cpp \
               Source/SFZVoiceAllocator.cpp \
               Source/StateManager.cpp \
               Source/INIDataManager.cpp

all: test_runner

$(BUILD_DIR):
	mkdir -p $(BUILD_DIR)

test_runner: $(BUILD_DIR)
	$(CXX) $(CXXFLAGS) $(INCLUDES) $(DEFINES) $(FRAMEWORKS) \
	    $(JUCE_SOURCES) $(TEST_SOURCES) $(IMPL_SOURCES) \
	    -o test_runner

clean:
	rm -rf $(BUILD_DIR) test_runner

run: test_runner
	./test_runner

.PHONY: all clean run